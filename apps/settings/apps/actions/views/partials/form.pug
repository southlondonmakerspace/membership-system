form( method="post" ).form-horizontal
	include ../../../../../../src/views/partials/csrf.pug
	.form-group
		label( for="slug" ).col-md-2 Slug:
		.col-md-4
			input( name="slug", type="text", value=( action ? action.slug : '' ), required )#slug.form-control
			span.help-block Used by the API for linking to actions.
	.form-group
		label( for="actionText" ).col-md-2 Text:
		.col-md-4
			input( name="actionText", type="text", value=( action ? action.text : '' ), required )#actionText.form-control
			span.help-block Textual description of what the action describes
	.form-group
		label( for="startingState" ).col-md-2 Initial State
		.col-md-4
			
			select( name="startingState", required )#startingState.form-control
				option( disabled ) –
				each state, s in states
					option(
						selected=( action.startingState != undefined && action.startingState.toString() == state._id),
						value=state._id
					) #{ state.text }
			span.help-block The state which a thing must be in in order for the action to be possible
	.form-group
		label( for="endingState" ).col-md-2 Final State
		.col-md-4
			select( name="endingState", required )#endingState.form-control
				option( disabled  ) –
				each state, s in states
					option(
						selected=( action.endingState != undefined && action.endingState.toString() == state._id ),
						value=state._id
					) #{ state.text }
			span.help-block What state a thing is in after the action has taken place
	.form-group
		label( for="eventFormat" ).col-md-2 Event format
		.col-md-4
			input( name="eventFormat", type="text", value=( action ? action.eventFormat : '' ) )#eventFormat.form-control
			span.help-block A format which a message will take when this action is displayed in a log.  $user is subtituded with the user's name, $item with the item the action was applied to
	.form-group
		.col-md-4.col-md-offset-2
			button.btn.btn-primary #{ formAction }
